name: Release Helm Charts
on:
 push:
   branches:
     - main
jobs:
 release:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
 
     - name: Configure Git
       run: |
         git config user.name "$GITHUB_ACTOR"
         git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

     - name: Install Helm
       uses: azure/setup-helm@v1
       with:
         version: v3.5.2

     - name: Install helm plugin on S3 bucket
       run: |
         helm plugin install https://github.com/hypnoglow/helm-s3.git
     
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v2
       with:
         aws-access-key-id: 'AKIAJ3GJQM4UF4NCKYZQ'
         aws-secret-access-key: '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'
         ##aws-access-key-id: ${{ secrets.AWS.AWS_ACCESS_KEY_ID }}
         #aws-secret-access-key: ${{ secrets.AWS.AWS_SECRET_ACCESS_KEY }}
         aws-region: ap-south-1
         role-duration-seconds: 1200
         role-session-name: MySessionName
         
     #- name: Helm repo add to S3 bucket
     #  run: |
     #    HELM_BUCKET=helm-s3-demo
     #    HELM_PATH=ecom-app-helm-charts/charts
     #    helm repo add my-charts s3://${HELM_BUCKET}/charts
         #git clone https://github.com/viveksrivastv/helm-s3-demo.git
     #    git clone https://github.com/arttor/helmify
     #    cd helm-s3-demo/${HELM_PATH}
     #    helm package ./*
     #    cd ../../${HELM_PATH}
     #    for i in *.tgz; do helm s3 push --ignore-if-exists $i my-charts; done
         
     - name: Set Backend Configuration
       run: |
         echo "terraform { backend \"s3\" {} }" > backend.tfvars
         #if [[ ${{ github.event.inputs.envchoice }} == "dev" ]]; then
           echo -e "bucket = \"dev-tfstate-bucket-eksblueprintmay152023-eksblueprintmay152023\"" >> backend.tfvars
           echo -e "dynamodb_table = \"dev-tfstate-lock-dynamodb-table-eksblueprintmay152023\"" >> backend.tfvars
           echo -e "key = dev" >> backend.tfvars
         #elif [[ ${{ github.event.inputs.envchoice }} == "test" ]]; then
           echo -e "bucket = \"test-tfstate-bucket-eksblueprintmay152023\"" >> backend.tfvars
           echo -e "dynamodb_table = \"test-tfstate-lock-dynamodb-table-eksblueprintmay152023\"" >> backend.tfvars
           echo -e "key = test" >> backend.tfvars
         #fi

